package Day012;

import java.util.Map;
import java.util.TreeMap;

public class TreeMap_47 {
    /**
     * TreeMap - так же как и HashMap представляет собой пары ключей и значений. Но элементы в TreeMap в отличии от HashMap
     * хранятся в порядку возростания.
     *
     * Есть такое понятие как деревья которое складывается с целочисленных значений. Все значения выходят от 1 числа(корня)
     * справа большое слева меньшее и так на каждой ветке, последние числа от которых уже ничего не отходит называются листья.
     *
     * Есть двоичное дерево в котором каждая ветвь и корень может содержать только 2 потомка. И выходит так само справа
     * числа которые являются больше корня, слева меньшие, и всеъ потомков такая же ситуация, справа больше, слева меньше.
     *
     * Есть красно-черное дерево которое тоже является двоичным, но в случае с TreeMap если все числа идут по возростанию
     * то левыъ(меньших ветвь не будет) и тогда это станет чем-то похожим на линкед лист там где поиск каких-то элементов
     * происходит так что сравнивается каждый обьект с обьектом, а тут сравнивается является ли это число больше этого, \
     * а так они всегда идут по возростанию числа всегда будут больше и будут идти вправо.
     * -НО кроме тоого что красно-черное дерево является двоичным оно является еще и самосбалансированым, и в какой-то момент
     * вместо элементов которые больше один за другой создастся обчыное дерево, где возьмется среднее значение всех ключей
     * розделиься на 2 ветви одну что является больше другую меньше, и там поместять средние значения больших и меньших
     * чисел, и от них уже будет продолжатся нормально
     */
    public static void main(String[] args) {
        Map<String,Person> personMap = new TreeMap<>();
        Person person1 = new Person(21,1,"Anton",2000);
        Person person2 = new Person(58,45,"Petr",1500);
        Person person3 = new Person(17,97,"Sveta",800);
        Person person4 = new Person(44,6,"Nikolay",3000);
        personMap.put("91",person1);
        personMap.put("19",person2);
        personMap.put("68",person3);
        personMap.put("27",person4);
        for (Map.Entry<String,Person> entry:personMap.entrySet()) {
            System.out.println(entry.getKey()+"   "+entry.getValue());
        }

    }
}
