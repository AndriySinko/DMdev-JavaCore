package Day10;

public class BigO_39 {
/**
 * BigONotation - выражает в себе скорость выполнения алгротима(  O(1) - всегда одинаковая скорость
 *                                                                O(n) - всегда разная скорость ( зависит от к-лва элементов )
 *                                                                O(logn) - не одинаковая но лучше как O(n)
 *  Иерархия: 1. O(1)  2. O(logn)  3. O(n)
 *
 * Память под примитивные типы данных или массивы выделяется так. 4 байта на 1 элемент и они все стоят рядом. Если нужно
 * найти какойто элемент то берется начальня точка в памяти, где начинаются обьекты и берется индекс под которым стоит элемент
 * и вычисляется оп формуле.
 * Начальная точка в памяти + индекс обьекта умножить на 4 байта (Нарпиклад 120+3 умножить на 4 = 132) - это значит что
 * обьект под индексом 3 находится в памяти на 132 позиции.
 *
 * На ссылочные типы даннаъ память выделяется и под ссылку и под обьект. Под ссылку память выделяется так что, на каждый
 * обьект выделяется по 8 байтов и они тоже стоят в порядку очереди, но в этих 8 байтах находится сыылка на сам обьект кторый
 * находится в другом каком-то месте. Чтобы найти какойто элемент то берется начальня точка в памяти, где начинаются
 * обьекты и берется индекс под которым стоит элемент и вычисляется оп формуле.
 * Начальная точка памяти + индекс обьекта умножить на 8 и на этой позиции булет находится ссылка на сам файл.
 */
}
